{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "version": "0.1.7-B",
    "scopeName": "source.gimi-ini",
    "name": "gimi-ini",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#sectionShaderregex"
        },
        {
            "include": "#sectionConstants"
        },
        {
            "include": "#sectionPresent"
        },
        {
            "include": "#sectionCommandList"
        },
        {
            "include": "#sectionTextureOverride"
        },
        {
            "include": "#sectionShaderOverride"
        },
        {
            "include": "#sectionCustomShader"
        },
        {
            "include": "#sectionBuiltincustomshader"
        },
        {
            "include": "#sectionBuiltincommandlist"
        },
        {
            "include": "#sectionClearRenderTargetView"
        },
        {
            "include": "#sectionCleardepthstencilview"
        },
        {
            "include": "#sectionClearunorderedaccessviewuint"
        },
        {
            "include": "#sectionClearunorderedaccessviewfloat"
        },
        {
            "include": "#sectionKey"
        },
        {
            "include": "#sectionResource"
        },
        {
            "include": "#sectionInclude"
        },
        {
            "include": "#sectionLogging"
        },
        {
            "include": "#sectionSystem"
        },
        {
            "include": "#sectionDevice"
        },
        {
            "include": "#sectionStereo"
        },
        {
            "include": "#sectionRendering"
        },
        {
            "include": "#sectionHunting"
        },
        {
            "include": "#sectionProfile"
        },
        {
            "include": "#sectionConvergencemap"
        },
        {
            "include": "#sectionPreset"
        },
        {
            "include": "#sectionLoader"
        },
        {
            "include": "#namespace"
        }
    ],
    "repository": {
        "sectionShaderregex": {
            "name": "meta.section.scope.shaderregex.gimi-ini",
            "patterns": [
                {
                    "begin": "(?i)^\\s*\\[(ShaderRegex.*(\\.Pattern\\.Replace))\\]",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.shaderregex.pattern.replace.gimi-ini"
                        },
                        "2": {
                            "name": "markup.italic.shaderregex.pattern.replace.gimi-ini"
                        }
                    },
                    "end": "(?=^\\s*\\[.+\\])",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "match": "(?i)ret",
                            "name": "keyword.control.return.shaderregex.gimi-ini"
                        },
                        {
                            "match": "^(?!(\\\\t|\\s)*\\$\\{).+(?<!\\\\n)$",
                            "name": "invalid.illegal.shaderregex.missing.eof.gimi-ini"
                        },
                        {
                            "match": "\\b(mul|mov)\\b",
                            "name": "keyword.operator.variable.operator.gimi-ini"
                        },
                        {
                            "match": "^(?:\\\\t*|\\s)*(if_\\w+|endif)",
                            "captures": {
                                "1": {
                                    "name": "keyword.control.condition.gimi-ini"
                                }
                            }
                        },
                        {
                            "match": "(\\$\\{)(\\w+)(\\})(?:\\.(\\w+))?",
                            "captures": {
                                "1": {
                                    "name": "markup.heading.punctuation.variable.start.gimi-ini"
                                },
                                "3": {
                                    "name": "markup.heading.punctuation.variable.end.gimi-ini"
                                },
                                "2": {
                                    "name": "variable.other.shaderregex.gimi-ini"
                                },
                                "4": {
                                    "name": "variable.other.shaderregex.gimi-ini",
                                    "patterns": [
                                        {
                                            "match": "[xyzw]{1,4}\\b",
                                            "name": "variable.dump.type.gimi-ini"
                                        },
                                        {
                                            "match": ".+\\b",
                                            "name": "invalid.illegal.variable.dump.type.gimi-ini"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "match": "([tvos]\\d{1,3})(?:\\.(\\w+))?",
                            "captures": {
                                "1": {
                                    "name": "variable.other.shaderregex.gimi-ini"
                                },
                                "2": {
                                    "patterns": [
                                        {
                                            "match": "[xyzw]{1,4}\\b",
                                            "name": "variable.dump.type.gimi-ini"
                                        },
                                        {
                                            "match": ".+\\b",
                                            "name": "invalid.illegal.variable.dump.type.gimi-ini"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "match": "(\\w+)\\(.*?\\)",
                            "captures": {
                                "1": {
                                    "name": "entity.name.function.gimi-ini"
                                }
                            }
                        }
                    ]
                },
                {
                    "begin": "(?i)^\\s*\\[(ShaderRegex.*(\\.Pattern))\\]",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.shaderregex.insertdeclarations.gimi-ini"
                        },
                        "2": {
                            "name": "markup.italic.shaderregex.pattern.gimi-ini"
                        }
                    },
                    "end": "(?=^\\s*\\[.+\\])",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "match": "(<)(\\w+)(>)",
                            "captures": {
                                "1": {
                                    "name": "string.regexp.keyword.left.gimi-ini"
                                },
                                "3": {
                                    "name": "string.regexp.keyword.right.gimi-ini"
                                },
                                "2": {
                                    "name": "markup.heading.keyword.gimi-ini"
                                }
                            }
                        },
                        {
                            "match": "(?i)ret",
                            "name": "keyword.control.return.shaderregex.gimi-ini"
                        }
                    ]
                },
                {
                    "begin": "(?i)^\\s*\\[(ShaderRegex.*(\\.InsertDeclarations))\\]",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.shaderregex.insertdeclarations.gimi-ini"
                        },
                        "2": {
                            "name": "markup.italic.shaderregex.insertdeclarations.gimi-ini"
                        }
                    },
                    "end": "(?=^\\s*\\[.+\\])",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "match": "^(\\w+)(?:\\s*(\\([^)]*\\)|\\w+))?\\s+([\\w.]+(?:,\\s*[\\w.]+)*)$",
                            "captures": {
                                "1": {
                                    "name": "entity.name.function.gimi-ini"
                                },
                                "2": {
                                    "name": "entity.name.type.gimi-ini",
                                    "patterns": [
                                        {
                                            "match": "(?i)\\bfloat\\b",
                                            "name": "support.type.float.gimi-ini"
                                        }
                                    ]
                                },
                                "3": {
                                    "patterns": [
                                        {
                                            "match": "(?i)\\bfloat\\b",
                                            "name": "support.type.float.gimi-ini"
                                        },
                                        {
                                            "match": "(?i)\\b[tvs]\\d{1,3}(\\.[xyzw]{1,4})?\\b",
                                            "name": "variable.other.shaderregex.layer.gimi-ini"
                                        },
                                        {
                                            "match": "\\w+",
                                            "name": "variable.other.shaderregex.gimi-ini"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "include": "#variable"
                        }
                    ]
                },
                {
                    "begin": "(?i)^\\s*\\[(ShaderRegex.*)\\]",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.name.function.shaderregex.gimi-ini"
                        }
                    },
                    "end": "(?=^\\s*\\[.+\\])",
                    "patterns": [
                        {
                            "include": "#commandListGeneral"
                        }
                    ]
                }
            ]
        },
        "sectionConstants": {
            "name": "meta.section.scope.content.gimi-ini",
            "begin": "(?i)^\\s*\\[(Constants)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.constants.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                },
                {
                    "name": "storage.modifier.constants.section.gimi-ini",
                    "match": "^\\s*global( +persist)?"
                },
                {
                    "name": "invalid.illegal.storage.modifier.constants.section.gimi-ini",
                    "match": "^\\s*persist( +global)?"
                }
            ]
        },
        "sectionPresent": {
            "name": "meta.section.scope.present.gimi-ini",
            "begin": "(?i)^\\s*\\[(Present)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.present.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionCommandList": {
            "name": "meta.section.scope.commandlist.gimi-ini",
            "begin": "(?i)^\\s*\\[(CommandList.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.commandlist.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                },
                {
                    "name": "keyword.commandlist.section.gimi-ini",
                    "match": "\\b(?i)(allow_duplicate_hash|depth_filter|partner|model|disable_scissor|filter_index)(?= )\\b"
                }
            ]
        },
        "sectionTextureOverride": {
            "name": "meta.section.scope.textureoverride.gimi-ini",
            "begin": "(?i)^\\s*\\[(TextureOverride.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.textureoverride.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                },
                {
                    "name": "keyword.textureoverride.section.gimi-ini",
                    "match": "\\b(?i)(stereomode|format|width|height|width_multiply|height_multiply|iteration|filter_index|expand_region_copy|deny_cpu_read)(?= )\\b"
                },
                {
                    "name": "keyword.textureoverride.section.gimi-ini",
                    "match": "\\b(?i)override_(byte_stride|vertex_count)(?= )\\b"
                },
                {
                    "name": "keyword.textureoverride.section.gimi-ini",
                    "match": "\\b(?i)(match_(type|usage|bind_flags|cpu_access_flags|misc_flags|byte_width|stride|mips|format|width|height|depth|array|msaa|msaa_quality|first_vertex|first_index|first_instance|vertex_count|index_count|instance_count|priority))(?= )\\b"
                }
            ]
        },
        "sectionShaderOverride": {
            "name": "meta.section.scope.shaderoverride.gimi-ini",
            "begin": "(?i)^\\s*\\[(ShaderOverride.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.shaderoverride.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                },
                {
                    "name": "keyword.shaderoverride.section.gimi-ini",
                    "match": "\\b(?i)(allow_duplicate_hash|depth_filter|partner|model|disable_scissor|filter_index)(?= )\\b"
                }
            ]
        },
        "sectionCustomShader": {
            "name": "meta.section.scope.customshader.gimi-ini",
            "begin": "(?i)^\\s*\\[(CustomShader.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.customshader.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)max_executions_per_frame|flags"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)blend(_factor|_state_merge|)|alpha(_to_coverage|)|mask"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)sample_mask"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)depth(_enable|_write_mask|_func|_stencil_state_merge|_clip_enable|_bias|_bias_clamp)"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)stencil(_enable|_read_mask|_write_mask|_front|stencil_back|stencil_ref)"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)fill|cull|front"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)slope_scaled_depth_bias|depth|scissor_enable"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)multisample_enable|antialiased_line_enable"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)rasterizer_state_merge"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)topology"
                },
                {
                    "name": "keyword.customshader.section.gimi-ini",
                    "match": "(?i)sampler"
                },
                {
                    "name": "keyword.customshader.section.blendfactor.gimi-ini",
                    "match": "(?i)src_alpha_sat|zero|one|(inv_|)(src(1?)|dest)(_color|_alpha)"
                }
            ]
        },
        "sectionBuiltincustomshader": {
            "name": "meta.section.scope.builtincustomshader.gimi-ini",
            "begin": "(?i)^\\s*\\[(Builtincustomshader.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.builtincustomshader.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionBuiltincommandlist": {
            "name": "meta.section.scope.builtincommandlist.gimi-ini",
            "begin": "(?i)^\\s*\\[(Builtincommandlist.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.builtincommandlist.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionClearRenderTargetView": {
            "name": "meta.section.scope.clearrendertargetview.gimi-ini",
            "begin": "(?i)^\\s*\\[(ClearRenderTargetView)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.clearrendertargetview.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionCleardepthstencilview": {
            "name": "meta.section.scope.cleardepthstencilview.gimi-ini",
            "begin": "(?i)^\\s*\\[(Cleardepthstencilview)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.cleardepthstencilview.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionClearunorderedaccessviewuint": {
            "name": "meta.section.scope.clearunorderedaccessviewuint.gimi-ini",
            "begin": "(?i)^\\s*\\[(Clearunorderedaccessviewuint)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.clearunorderedaccessviewuint.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionClearunorderedaccessviewfloat": {
            "name": "meta.section.scope.clearunorderedaccessviewfloat.gimi-ini",
            "begin": "(?i)^\\s*\\[(Clearunorderedaccessviewfloat)\\]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.clearunorderedaccessviewfloat.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#commandListGeneral"
                }
            ]
        },
        "sectionKey": {
            "name": "meta.section.scope.key.gimi-ini",
            "begin": "(?i)^\\s*\\[(Key.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.key.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "match": "(?i)^\\s*(key)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.key.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "keyword.other.key.section.key.keys.gimi-ini",
                                    "match": "(?i)(\\b(no_)?(ctrl|shift|alt)\\b)|\\b\\w\\b|[\\[\\];'\"]"
                                },
                                {
                                    "name": "invalid.illegal.anything.gimi-ini",
                                    "match": "\\S+"
                                }
                            ]
                        }
                    }
                },
                {
                    "include": "#regularGeneral"
                },
                {
                    "match": "(?i)^\\s*(type)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.type.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "keyword.other.key.section.type.types.gimi-ini",
                                    "match": "(?i)\\b(cycle|hold|toggle)\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(condition)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.condition.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "include": "#variable"
                                },
                                {
                                    "include": "#constant"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(warp)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.warp.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "constant.language.boolean.gimi-ini",
                                    "match": "(?i)true|false"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(delay)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.delay.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "constant.numeric.gimi-ini",
                                    "match": "\\d+"
                                },
                                {
                                    "name": "invalid.illegal.otherthing.gimi-ini",
                                    "match": "\\S+"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(convergence|separation|release_(delay|transition(_type)?)|transition(_type)?)\\b( *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.key.section.incomplete.gimi-ini"
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(\\w+)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "invalid.illegal.otherthing.gimi-ini"
                        }
                    }
                }
            ]
        },
        "sectionResource": {
            "name": "meta.section.scope.resource.gimi-ini",
            "begin": "(?i)^\\[(Resource.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.resource.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                },
                {
                    "match": "(?i)^\\s*(type)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.resource.section.type.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "keyword.other.resource.section.type.types.gimi-ini",
                                    "match": "(?i)(Buffer|StructuredBuffer|ByteAddressBuffer|Texture([123]D|Cube)|(Append|Consume)StructuredBuffer|RW(Buffer|StructuredBuffer|ByteAddressBuffer|Texture[123]D))\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(format)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.resource.section.formt.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "keyword.other.resource.section.formt.types.gimi-ini",
                                    "match": "\\bDXGI_FORMAT_(.+)\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(filename)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.resource.section.filename.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "markup.underline.link.files.gimi-ini",
                                    "match": "(\\.[\\\\\\/])?[\\w\\-\\.]+([\\\\\\/][\\w\\-\\.]+)*\\.[\\w\\-\\.]+\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "keyword.resource.section.gimi-ini",
                    "match": "(?i)\\b(filename|stride|data|array)\\b"
                }
            ]
        },
        "sectionInclude": {
            "name": "meta.section.scope.include.gimi-ini",
            "begin": "(?i)^\\[(Include.+)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.include.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                },
                {
                    "match": "(?i)^\\s*(include)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.include.section.include.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "markup.underline.link.ini.files.gimi-ini",
                                    "match": "(?i)\\w+(\\\\\\w+)?\\.ini"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "sectionLogging": {
            "name": "meta.section.scope.logging.gimi-ini",
            "begin": "(?i)^\\[(Logging)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.logging.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionSystem": {
            "name": "meta.section.scope.system.gimi-ini",
            "begin": "(?i)^\\[(System)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.system.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionDevice": {
            "name": "meta.section.scope.device.gimi-ini",
            "begin": "(?i)^\\[(Device)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.device.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionStereo": {
            "name": "meta.section.scope.stereo.gimi-ini",
            "begin": "(?i)^\\[(Stereo)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.stereo.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionRendering": {
            "name": "meta.section.scope.rendering.gimi-ini",
            "begin": "(?i)^\\[(Rendering)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.rendering.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionHunting": {
            "name": "meta.section.scope.hunting.gimi-ini",
            "begin": "(?i)^\\[(Hunting)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.hunting.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionProfile": {
            "name": "meta.section.scope.profile.gimi-ini",
            "begin": "(?i)^\\[(Profile)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.profile.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionConvergencemap": {
            "name": "meta.section.scope.convergencemap.gimi-ini",
            "begin": "(?i)^\\[(Convergencemap)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.convergencemap.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionPreset": {
            "name": "meta.section.scope.preset.gimi-ini",
            "begin": "(?i)^\\[(Preset)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.preset.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "sectionLoader": {
            "name": "meta.section.scope.loader.gimi-ini",
            "begin": "(?i)^\\[(Loader)\\]",
            "beginCaptures": {
                "1": {
                    "name": "support.class.loader.gimi-ini"
                }
            },
            "end": "(?=\\[.+\\])",
            "patterns": [
                {
                    "include": "#regularGeneral"
                }
            ]
        },
        "namespace": {
            "name": "entity.namespace.gimi-ini",
            "begin": "^(?=namespace)",
            "end": "$|\\n",
            "patterns": [
                {
                    "name": "keyword.namespace.gimi-ini",
                    "match": "namespace"
                },
                {
                    "name": "constant.namespace.path.gimi-ini",
                    "match": "\\w+(?:\\\\\\w+)+"
                }
            ]
        },
        "commandListGeneral": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "name": "meta.control.flow.scope.gimi-ini",
                    "patterns": [
                        {
                            "begin": "(?i)^\\s*(if|else(?:\\s*if)?|elif)\\b",
                            "end": "$|\\n",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.control.have.condition.gimi-ini"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#variable"
                                },
                                {
                                    "include": "#keywords"
                                }
                            ]
                        },
                        {
                            "begin": "(?i)^\\s*(else|endif)\\b",
                            "end": "$|\\n",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.control.no.condition.gimi-ini"
                                }
                            }
                        }
                    ]
                },
                {
                    "match": "(?i)^\\s*(handling)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.commandlist.general.handling.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "keyword.other.commandlist.general.handling.type.gimi-ini",
                                    "match": "(?i)skip"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*(hash)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.other.commandlist.general.hash.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "support.type.hash.gimi-ini",
                                    "match": "(?i)\\b[\\dabcdef]{8,16}\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(?i)^\\s*((?:[vhdgpc]s-(?:t|cb)|vb)\\d{1,3}|ib) *= *(.*)?",
                    "captures": {
                        "1": {
                            "name": "variable.language.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "support.class.variable.target.gimi-ini",
                                    "match": "(?i)\\bResource.+\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "include": "#variable"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#keywords"
                },
                {
                    "name": "keyword.operator.execution.flow.gimi-ini",
                    "match": "(?i)\\b(post|pre)\\b"
                },
                {
                    "name": "keyword.other.variable.type.gimi-ini",
                    "match": "(?i)\\blocal\\b"
                }
            ]
        },
        "regularGeneral": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#variable"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#keywords"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.analyse.options.gimi-ini",
                    "match": "(?i)\\banalyse_options\\b"
                },
                {
                    "match": "(?i)^\\s*(run)(?: *= *(.*))?",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.variable.flow.run.gimi-ini"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "name": "support.function.run.gimi-ini",
                                    "match": "(?i)\\b(CommandList|CustomShader)[\\\\\\.\\w]*\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "keyword.operator.variable.operator.gimi-ini",
                    "match": "(?i)\\b(ref(erence)?|copy|store|draw(indexed)?)\\b"
                }
            ]
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.name.gimi-ini",
                    "match": "(?i)\\$(\\\\[\\w\\-\\. ]+){2,}\\b"
                },
                {
                    "name": "variable.name.gimi-ini",
                    "match": "(?i)\\$[\\w_]\\w+\\b"
                },
                {
                    "name": "variable.language.gimi-ini",
                    "match": "(?i)\\b(([vhdgpc]s-(t|cb)|[pc]s-u|vb)\\d{1,3}|ib)\\b"
                },
                {
                    "name": "variable.other.gimi-ini",
                    "match": "(?i)\\b[vhdgpc]s(?!-)\\b"
                },
                {
                    "name": "variable.parameter.gimi-ini",
                    "match": "(?i)\\b[xyzw]\\d{0,3}\\b"
                },
                {
                    "name": "variable.dump.type.gimi-ini",
                    "match": "(?i)\\bdump_(rt|tex|cb|vb|ib)|buf|txt\\b"
                },
                {
                    "name": "constant.numeric.gimi-ini",
                    "match": "(?i)time|hunting|null|inf|NaN|this"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "name": "constant.numeric.gimi-ini",
                    "match": "(?i)rt_width|rt_height|res_width|res_height|window_width|window_height|cursor_screen_x|cursor_screen_y|cursor_window_x|cursor_window_y|cursor_x|cursor_y"
                },
                {
                    "name": "constant.numeric.gimi-ini",
                    "match": "(?i)vertex_count|index_count|instance_count|first_vertex|first_index|first_instance|thread_group_count_x|thread_group_count_y|thread_group_count_z|indirect_offset|draw_type"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.gimi-ini",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.gimi-ini",
                    "match": "\\\\."
                },
                {
                    "name": "string.easter.eggs.gimi-ini",
                    "match": "Seriously\\? Why you have typing the full \\.ini by hand\\?"
                }
            ]
        },
        "unknowKeyword": {
            "name": "invalid.illegal.unknow.keyword.gimi-ini",
            "match": "\\S+"
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.semicolon.gimi-ini",
                    "match": "^\\s*(;)(.*)$",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.gimi-ini"
                        },
                        "2": {
                            "name": "comment.line.semicolon.content.gimi-ini",
                            "patterns": [
                                {
                                    "name": "comment.easter-eggs.gimi-ini",
                                    "match": "\\bbug(s)?|issue(s)?|good luck\\b"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "invalid.illegal.comment.gimi-ini",
                    "match": "^.+;.*$"
                }
            ]
        }
    }
}