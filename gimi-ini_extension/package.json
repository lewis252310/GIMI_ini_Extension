{
  "name": "gimi-ini",
  "displayName": "GIMI ini",
  "description": "GIMI ini Extension",
  "author": {
    "name": "!someone name has 63B long?",
    "url": "https://github.com/lewis252310"
  },
  "contributors": [
    {
      "name": "SinsOfSeven@sinsofseven",
      "url": "https://github.com/SinsOfSeven"
    },
    {
      "name": "AGMG (Team)"
    }
  ],
  "homepage": "https://github.com/lewis252310/GIMI_ini_Extension",
  "repository": {
    "type": "git",
    "url": "https://github.com/lewis252310/GIMI_ini_Extension.git"
  },
  "version": "0.4.0",
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Themes",
    "Other"
  ],
  "activationEvents": [
    "onLanguage:gimi-ini"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "gimi-ini",
        "aliases": [
          "GIMI ini",
          "GIMI"
        ],
        "extensions": [
          ".ini",
          ".gimini"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "configuration": [
      {
        "title": "GIMI ini",
        "properties": {
          "GIMIini.diagnostics.conditionExpression": {
            "type": "boolean",
            "default": true,
            "description": "Enable diagnostics on condition expresstion. (Need restart VSCode)"
          },
          "GIMIini.file.parseingAllowedMaximumLines": {
            "type": "number",
            "default": 1000,
            "description": "[Useless] Maximum lines in a single file allowed by the parser. '-1' to allowed infinite lines :)\nTake closer one compared to maximum characters"
          },
          "GIMIini.file.parseingAllowedMaximumCharacters": {
            "type": "number",
            "default": 30000,
            "description": "[Useless] Maximum characters in a single file allowed by the parser. '-1' to allowed infinite characters :)\nTake closer one compared to maximum lines"
          },
          "GIMIini.parser.parseingDebounceInterval": {
            "type": "number",
            "default": -1,
            "description": "[Useless] Debounce. Each parse must be greater than this time interval. Unit is seconds, decimal allowed, any negative number means disabled."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "gimi-ini.helloWorld",
        "title": "Hello World",
        "shortTitle": "GIMI hello world"
      },
      {
        "command": "gimi-ini.testTrigger",
        "title": "GIMI testing cmd"
      }
    ],
    "grammars": [
      {
        "language": "gimi-ini",
        "scopeName": "source.gimi-ini",
        "path": "./syntaxes/gimi_ini.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "gimi-ini",
        "path": "./snippets/gimi-ini.json"
      }
    ],
    "colors": [
      {
        "id": "gimi.pyro",
        "description": "Pyro from the seven elements.",
        "defaults": {
          "dark": "#F07830",
          "light": "#F07830"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.81.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  }
}
